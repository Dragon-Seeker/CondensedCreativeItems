architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    // Remove the next line if you don't want to depend on the API
    //modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

    compileClasspath(project(path: ":common", configuration: "namedElements")) { transitive false }

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config}"){
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation("io.wispforest:owo-lib:${rootProject.owo_version}"){
        exclude(group: "net.fabricmc.fabric-api")
    }
//
//    modLocalRuntime("maven.modrinth:ferrite-core:${rootProject.ferrite_core}-fabric")
//    modLocalRuntime("maven.modrinth:starlight:${rootProject.starlight}")
//
//    //modLocalRuntime("maven.modrinth:lithium:${rootProject.lithium}")
//
//    modLocalRuntime("maven.modrinth:sodium:${rootProject.sodium}")
//
//    implementation 'org.joml:joml:1.10.2'
//    modLocalRuntime 'org.joml:joml:1.10.2'
//
    modCompileOnly("com.terraformersmc:modmenu:${rootProject.modmenu}")
    modLocalRuntime("com.terraformersmc:modmenu:${rootProject.modmenu}")
}

